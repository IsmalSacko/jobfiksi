# Generated by Django 5.1.1 on 2024-10-29 20:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('candidat', 'Candidat'), ('restaurant', 'Restaurant')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rue', models.CharField(max_length=255)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=10)),
                ('pays', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_publication', models.DateTimeField(auto_now_add=True)),
                ('type_contrat', models.CharField(choices=[('CDI', 'CDI'), ('CDD', 'CDD')], max_length=3)),
                ('salaire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('temps_travail', models.CharField(choices=[('Partiel', 'Temps partiel'), ('Plein', 'Temps plein')], max_length=10)),
                ('statut', models.CharField(choices=[('Urgent', 'Urgent'), ('Non Urgent', 'Non Urgent')], max_length=10)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annonces', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('tel', models.CharField(blank=True, max_length=20, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to='cvs/')),
                ('niveau_etude', models.CharField(blank=True, max_length=100, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('adresse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobfiksi_api.adresse')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidat_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_candidature', models.DateField(auto_now_add=True)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='jobfiksi_api.annonce')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='jobfiksi_api.candidat')),
            ],
        ),
        migrations.CreateModel(
            name='Offre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annonce', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offre', to='jobfiksi_api.annonce')),
            ],
        ),
        migrations.CreateModel(
            name='PreferenceCandidat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flexibilite_deplacement', models.BooleanField(default=False)),
                ('secteur', models.CharField(blank=True, max_length=100, null=True)),
                ('type_contrat', models.CharField(blank=True, choices=[('CDI', 'CDI'), ('CDD', 'CDD')], max_length=3, null=True)),
                ('type_restaurant', models.CharField(blank=True, max_length=100, null=True)),
                ('horaire_travail', models.CharField(blank=True, max_length=50, null=True)),
                ('possibilite_formation', models.BooleanField(default=False)),
                ('possibilite_contrat_direct', models.BooleanField(default=False)),
                ('candidat', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preference', to='jobfiksi_api.candidat')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('tel', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=100)),
                ('adresse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobfiksi_api.adresse')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreferenceRestaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau_etude', models.CharField(blank=True, max_length=100, null=True)),
                ('possibilite_former', models.BooleanField(default=False)),
                ('possibilite_debutant', models.BooleanField(default=False)),
                ('horaire_travail', models.CharField(blank=True, max_length=50, null=True)),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preference', to='jobfiksi_api.restaurant')),
            ],
        ),
    ]
